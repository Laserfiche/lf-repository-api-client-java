name: lf-repository-api-client-java-CI

on:
  push:
    branches: [ '\d+.x' ]
  pull_request:
    branches: [ '\d+.x' ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  VERSION_PREFIX: '2.0.3'
  GITHUB_PAGES_BRANCH: 'gh-pages'

jobs:
  build-n-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn -B package -Dmaven.test.skip=true --file pom.xml

    - name: Run tests
      env:
        ACCESS_KEY: ${{ secrets.DEV_CA_PUBLIC_USE_INTEGRATION_TEST_ACCESS_KEY }}
        SERVICE_PRINCIPAL_KEY: ${{ secrets.DEV_CA_PUBLIC_USE_TESTOAUTHSERVICEPRINCIPAL_SERVICE_PRINCIPAL_KEY }}
        REPOSITORY_ID:  ${{ secrets.DEV_CA_PUBLIC_USE_REPOSITORY_ID_1 }}
        AUTHORIZATION_TYPE: ${{ secrets.AUTHORIZATION_TYPE }}
        TEST_HEADER: ${{ secrets.TEST_HEADER }}
      run: mvn test

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1
      if: always()
      with:
        files: "target/surefire-reports/*.xml"

  build-documentation:

    runs-on: ubuntu-latest
    needs: [ build-n-test ]

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Create temporary directory
      run: mkdir -p ./docs_temp/${{ github.ref_name }}

    - name: Generate Javadoc
      run: mvn javadoc:javadoc

    - name: Move javadoc files to temporary directory
      run: mv ${{ github.workspace }}/target/site/ ${{ github.workspace }}/docs_temp/${{ github.ref_name }}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: documentation-artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{ github.workspace }}/docs_temp/${{ github.ref_name }}

    - name: Delete temporary directory
      run: rm -r ./docs_temp

  publish-preview-package:
    runs-on: ubuntu-latest
    environment: preview
    if: ${{ github.run_attempt != 1 }}
    needs: [ build-n-test, build-documentation ] # wait for build to finish

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn -B package -Dmaven.test.skip=true --file pom.xml

    - name: Set up Apache Maven Central
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Set Java Package Version environment
      run: echo "PACKAGE_VERSION=${{ env.VERSION_PREFIX }}-preview-${{ github.run_id }}-SNAPSHOT" >> $GITHUB_ENV

    - name: Set Java Package Version
      run: mvn versions:set -DnewVersion=${{ env.PACKAGE_VERSION }}

    - name: Publish to Sonatype
      run: mvn clean deploy -Dmaven.test.skip=true -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

    - name: Tag commit
      uses: rickstaa/action-create-tag@v1
      with:
        tag: ${{ env.PACKAGE_VERSION }}
        commit_sha: ${{ github.sha }}
        message: Workflow run ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  publish-production-package:
    runs-on: ubuntu-latest
    environment: production
    if: ${{ github.run_attempt != 1 }}
    needs: [ build-n-test, build-documentation ] # wait for build to finish

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn -B package -Dmaven.test.skip=true --file pom.xml

    - name: Set up Apache Maven Central
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Set Java Package Version environment
      run: echo "PACKAGE_VERSION=${{ env.VERSION_PREFIX }}" >> $GITHUB_ENV

    - name: Set Java Package Version
      run: mvn versions:set -DnewVersion=${{ env.PACKAGE_VERSION }}

    - name: Publish to Maven Central
      run: mvn clean deploy -P release -Dmaven.test.skip=true -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}

    - name: Tag commit
      uses: rickstaa/action-create-tag@v1
      with:
        tag: ${{ env.PACKAGE_VERSION }}
        commit_sha: ${{ github.sha }}
        message: Workflow run ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  publish-documentation:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [ publish-preview-package ]
    steps:
      - name: Set DOCUMENTATION_VERSION environment variable
        run: |
          if [[ '${{ github.event_name }}' == 'pull_request' ]]; then
            echo 'DOCUMENTATION_VERSION=${{ github.base_ref }}' >> $GITHUB_ENV
          elif [[ '${{ github.ref_protected }}' == 'true' && '${{ github.ref_type }}' == 'branch' ]]; then
            echo 'DOCUMENTATION_VERSION=${{ github.ref_name }}' >> $GITHUB_ENV
          else
            echo '::error::Unable to publish documentation for the current branch.'
            exit 1
          fi

      - name: Print DOCUMENTATION_VERSION environment variable
        run: |
          echo 'Publishing documentation to ${{ env.GITHUB_PAGES_BRANCH }} for ${{ env.DOCUMENTATION_VERSION }}.'

      - uses: actions/checkout@v3
        with:
          ref: ${{ env.GITHUB_PAGES_BRANCH }}

      - name: Delete documentation directory
        run: rm -f -r ./docs/${{ env.DOCUMENTATION_VERSION }}

      - name: Create documentation directory
        run: mkdir -p ./docs/${{ env.DOCUMENTATION_VERSION }}

      - name: Download documentation build artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: documentation-artifact
          path: ./docs/${{ env.DOCUMENTATION_VERSION }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4.2.3
        with:
          branch: ${{ env.GITHUB_PAGES_BRANCH }}-${{ env.DOCUMENTATION_VERSION }}-patch
          delete-branch: true
          title: "Automated documentation update for ${{ env.DOCUMENTATION_VERSION }} by action ${{ github.run_id }}"
          commit-message: "Automated documentation update for ${{ env.DOCUMENTATION_VERSION }} by action ${{ github.run_id }}"
          body: "Automated documentation update for ${{ env.DOCUMENTATION_VERSION }} by action ${{ github.run_id }}"
          assignees: ${{ github.actor }}




