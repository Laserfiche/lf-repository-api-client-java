/*
 * Laserfiche Repository API
 * Welcome to the Laserfiche API Swagger Playground. You can try out any of our API calls against your live Laserfiche Cloud account. Visit the developer center for more details: <a href=\"https://developer.laserfiche.com\">https://developer.laserfiche.com</a><p><strong>Build# : </strong>51c16645afa5983c3eb4a849158d6f1e355d2bb0_.20220512.1</p>
 *
 * OpenAPI spec version: 1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.laserfiche.api.client.apiserver;

import com.laserfiche.api.client.ApiCallback;
import com.laserfiche.api.client.ApiClient;
import com.laserfiche.api.client.ApiException;
import com.laserfiche.api.client.ApiResponse;
import com.laserfiche.api.client.Configuration;
import com.laserfiche.api.client.Pair;
import com.laserfiche.api.client.ProgressRequestBody;
import com.laserfiche.api.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.laserfiche.api.client.model.ODataValueContextOfIListOfTemplateFieldInfo;
import com.laserfiche.api.client.model.ODataValueContextOfIListOfWTemplateInfo;
import com.laserfiche.api.client.model.ProblemDetails;
import com.laserfiche.api.client.model.WTemplateInfo;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TemplateDefinitionsApi {
    private ApiClient apiClient;

    public TemplateDefinitionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TemplateDefinitionsApi(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return apiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.apiClient = apiClient;
    }

    /**
     * Build call for getTemplateDefinitionById
     * @param repoId The requested repository ID. (required)
     * @param templateId The requested template definition ID. (required)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTemplateDefinitionByIdCall(String repoId, Integer templateId, String culture, String $select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v1/Repositories/{repoId}/TemplateDefinitions/{templateId}"
            .replaceAll("\\{" + "repoId" + "\\}", apiClient.escapeString(repoId.toString()))
            .replaceAll("\\{" + "templateId" + "\\}", apiClient.escapeString(templateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (culture != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("culture", culture));
        if ($select != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$select", $select));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Authorization", "OAuth2 Authorization Code Flow", "OAuth2 Client Credentials Flow" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTemplateDefinitionByIdValidateBeforeCall(String repoId, Integer templateId, String culture, String $select, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'repoId' is set
        if (repoId == null) {
            throw new ApiException("Missing the required parameter 'repoId' when calling getTemplateDefinitionById(Async)");
        }
        // verify the required parameter 'templateId' is set
        if (templateId == null) {
            throw new ApiException("Missing the required parameter 'templateId' when calling getTemplateDefinitionById(Async)");
        }
        
        com.squareup.okhttp.Call call = getTemplateDefinitionByIdCall(repoId, templateId, culture, $select, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 
     * - Returns a single template definition (including field definitions, if relevant). - Provide a template definition ID, and get the single template definition associated with that ID. Useful when a route provides a minimal amount of details, and more information about the specific template is needed. - Allowed OData query options: Select
     * @param repoId The requested repository ID. (required)
     * @param templateId The requested template definition ID. (required)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @return WTemplateInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public WTemplateInfo getTemplateDefinitionById(String repoId, Integer templateId, String culture, String $select) throws ApiException {
        ApiResponse<WTemplateInfo> resp = getTemplateDefinitionByIdWithHttpInfo(repoId, templateId, culture, $select);
        return resp.getData();
    }

    /**
     * 
     * - Returns a single template definition (including field definitions, if relevant). - Provide a template definition ID, and get the single template definition associated with that ID. Useful when a route provides a minimal amount of details, and more information about the specific template is needed. - Allowed OData query options: Select
     * @param repoId The requested repository ID. (required)
     * @param templateId The requested template definition ID. (required)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @return ApiResponse&lt;WTemplateInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<WTemplateInfo> getTemplateDefinitionByIdWithHttpInfo(String repoId, Integer templateId, String culture, String $select) throws ApiException {
        com.squareup.okhttp.Call call = getTemplateDefinitionByIdValidateBeforeCall(repoId, templateId, culture, $select, null, null);
        Type localVarReturnType = new TypeToken<WTemplateInfo>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * - Returns a single template definition (including field definitions, if relevant). - Provide a template definition ID, and get the single template definition associated with that ID. Useful when a route provides a minimal amount of details, and more information about the specific template is needed. - Allowed OData query options: Select
     * @param repoId The requested repository ID. (required)
     * @param templateId The requested template definition ID. (required)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTemplateDefinitionByIdAsync(String repoId, Integer templateId, String culture, String $select, final ApiCallback<WTemplateInfo> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTemplateDefinitionByIdValidateBeforeCall(repoId, templateId, culture, $select, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<WTemplateInfo>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTemplateDefinitions
     * @param repoId The requested repository ID. (required)
     * @param templateName An optional query parameter. Can be used to get a single template definition using the template name. (optional)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTemplateDefinitionsCall(String repoId, String templateName, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v1/Repositories/{repoId}/TemplateDefinitions"
            .replaceAll("\\{" + "repoId" + "\\}", apiClient.escapeString(repoId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (templateName != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("templateName", templateName));
        if (culture != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("culture", culture));
        if ($select != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$select", $select));
        if ($orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$orderby", $orderby));
        if ($top != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$top", $top));
        if ($skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$skip", $skip));
        if ($count != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$count", $count));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (prefer != null)
        localVarHeaderParams.put("Prefer", apiClient.parameterToString(prefer));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Authorization", "OAuth2 Authorization Code Flow", "OAuth2 Client Credentials Flow" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTemplateDefinitionsValidateBeforeCall(String repoId, String templateName, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'repoId' is set
        if (repoId == null) {
            throw new ApiException("Missing the required parameter 'repoId' when calling getTemplateDefinitions(Async)");
        }
        
        com.squareup.okhttp.Call call = getTemplateDefinitionsCall(repoId, templateName, prefer, culture, $select, $orderby, $top, $skip, $count, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 
     * - Returns all template definitions (including field definitions) in the repository. If a template name query parameter is given, then a single template definition is returned. - Provide a repository ID, and get a paged listing of template definitions available in the repository. Useful when trying to find a list of all template definitions available, rather than a specific one. - Default page size: 100. Allowed OData query options: Select | Count | OrderBy | Skip | Top | SkipToken | Prefer.
     * @param repoId The requested repository ID. (required)
     * @param templateName An optional query parameter. Can be used to get a single template definition using the template name. (optional)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @return ODataValueContextOfIListOfWTemplateInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ODataValueContextOfIListOfWTemplateInfo getTemplateDefinitions(String repoId, String templateName, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count) throws ApiException {
        ApiResponse<ODataValueContextOfIListOfWTemplateInfo> resp = getTemplateDefinitionsWithHttpInfo(repoId, templateName, prefer, culture, $select, $orderby, $top, $skip, $count);
        return resp.getData();
    }

    /**
     * 
     * - Returns all template definitions (including field definitions) in the repository. If a template name query parameter is given, then a single template definition is returned. - Provide a repository ID, and get a paged listing of template definitions available in the repository. Useful when trying to find a list of all template definitions available, rather than a specific one. - Default page size: 100. Allowed OData query options: Select | Count | OrderBy | Skip | Top | SkipToken | Prefer.
     * @param repoId The requested repository ID. (required)
     * @param templateName An optional query parameter. Can be used to get a single template definition using the template name. (optional)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @return ApiResponse&lt;ODataValueContextOfIListOfWTemplateInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ODataValueContextOfIListOfWTemplateInfo> getTemplateDefinitionsWithHttpInfo(String repoId, String templateName, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count) throws ApiException {
        com.squareup.okhttp.Call call = getTemplateDefinitionsValidateBeforeCall(repoId, templateName, prefer, culture, $select, $orderby, $top, $skip, $count, null, null);
        Type localVarReturnType = new TypeToken<ODataValueContextOfIListOfWTemplateInfo>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * - Returns all template definitions (including field definitions) in the repository. If a template name query parameter is given, then a single template definition is returned. - Provide a repository ID, and get a paged listing of template definitions available in the repository. Useful when trying to find a list of all template definitions available, rather than a specific one. - Default page size: 100. Allowed OData query options: Select | Count | OrderBy | Skip | Top | SkipToken | Prefer.
     * @param repoId The requested repository ID. (required)
     * @param templateName An optional query parameter. Can be used to get a single template definition using the template name. (optional)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTemplateDefinitionsAsync(String repoId, String templateName, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count, final ApiCallback<ODataValueContextOfIListOfWTemplateInfo> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTemplateDefinitionsValidateBeforeCall(repoId, templateName, prefer, culture, $select, $orderby, $top, $skip, $count, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ODataValueContextOfIListOfWTemplateInfo>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTemplateFieldDefinitions
     * @param repoId The requested repository ID. (required)
     * @param templateId The requested template definition ID. (required)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTemplateFieldDefinitionsCall(String repoId, Integer templateId, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v1/Repositories/{repoId}/TemplateDefinitions/{templateId}/fields"
            .replaceAll("\\{" + "repoId" + "\\}", apiClient.escapeString(repoId.toString()))
            .replaceAll("\\{" + "templateId" + "\\}", apiClient.escapeString(templateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (culture != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("culture", culture));
        if ($select != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$select", $select));
        if ($orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$orderby", $orderby));
        if ($top != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$top", $top));
        if ($skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$skip", $skip));
        if ($count != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$count", $count));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (prefer != null)
        localVarHeaderParams.put("Prefer", apiClient.parameterToString(prefer));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Authorization", "OAuth2 Authorization Code Flow", "OAuth2 Client Credentials Flow" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTemplateFieldDefinitionsValidateBeforeCall(String repoId, Integer templateId, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'repoId' is set
        if (repoId == null) {
            throw new ApiException("Missing the required parameter 'repoId' when calling getTemplateFieldDefinitions(Async)");
        }
        // verify the required parameter 'templateId' is set
        if (templateId == null) {
            throw new ApiException("Missing the required parameter 'templateId' when calling getTemplateFieldDefinitions(Async)");
        }
        
        com.squareup.okhttp.Call call = getTemplateFieldDefinitionsCall(repoId, templateId, prefer, culture, $select, $orderby, $top, $skip, $count, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 
     * - Returns the field definitions assigned to a template definition. - Provide a template definition ID, and get a paged listing of the field definitions assigned to that template.  - Default page size: 100. Allowed OData query options: Select | Count | OrderBy | Skip | Top | SkipToken | Prefer.
     * @param repoId The requested repository ID. (required)
     * @param templateId The requested template definition ID. (required)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @return ODataValueContextOfIListOfTemplateFieldInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ODataValueContextOfIListOfTemplateFieldInfo getTemplateFieldDefinitions(String repoId, Integer templateId, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count) throws ApiException {
        ApiResponse<ODataValueContextOfIListOfTemplateFieldInfo> resp = getTemplateFieldDefinitionsWithHttpInfo(repoId, templateId, prefer, culture, $select, $orderby, $top, $skip, $count);
        return resp.getData();
    }

    /**
     * 
     * - Returns the field definitions assigned to a template definition. - Provide a template definition ID, and get a paged listing of the field definitions assigned to that template.  - Default page size: 100. Allowed OData query options: Select | Count | OrderBy | Skip | Top | SkipToken | Prefer.
     * @param repoId The requested repository ID. (required)
     * @param templateId The requested template definition ID. (required)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @return ApiResponse&lt;ODataValueContextOfIListOfTemplateFieldInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ODataValueContextOfIListOfTemplateFieldInfo> getTemplateFieldDefinitionsWithHttpInfo(String repoId, Integer templateId, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count) throws ApiException {
        com.squareup.okhttp.Call call = getTemplateFieldDefinitionsValidateBeforeCall(repoId, templateId, prefer, culture, $select, $orderby, $top, $skip, $count, null, null);
        Type localVarReturnType = new TypeToken<ODataValueContextOfIListOfTemplateFieldInfo>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * - Returns the field definitions assigned to a template definition. - Provide a template definition ID, and get a paged listing of the field definitions assigned to that template.  - Default page size: 100. Allowed OData query options: Select | Count | OrderBy | Skip | Top | SkipToken | Prefer.
     * @param repoId The requested repository ID. (required)
     * @param templateId The requested template definition ID. (required)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTemplateFieldDefinitionsAsync(String repoId, Integer templateId, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count, final ApiCallback<ODataValueContextOfIListOfTemplateFieldInfo> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTemplateFieldDefinitionsValidateBeforeCall(repoId, templateId, prefer, culture, $select, $orderby, $top, $skip, $count, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ODataValueContextOfIListOfTemplateFieldInfo>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
    /**
     * Build call for getTemplateFieldDefinitionsByTemplateName
     * @param repoId The requested repository ID. (required)
     * @param templateName A required query parameter for the requested template name. (required)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @param progressListener Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call getTemplateFieldDefinitionsByTemplateNameCall(String repoId, String templateName, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        Object localVarPostBody = null;
        
        // create path and map variables
        String localVarPath = "/v1/Repositories/{repoId}/TemplateDefinitions/Fields"
            .replaceAll("\\{" + "repoId" + "\\}", apiClient.escapeString(repoId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (templateName != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("templateName", templateName));
        if (culture != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("culture", culture));
        if ($select != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$select", $select));
        if ($orderby != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$orderby", $orderby));
        if ($top != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$top", $top));
        if ($skip != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$skip", $skip));
        if ($count != null)
        localVarQueryParams.addAll(apiClient.parameterToPair("$count", $count));

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (prefer != null)
        localVarHeaderParams.put("Prefer", apiClient.parameterToString(prefer));

        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = apiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) localVarHeaderParams.put("Accept", localVarAccept);

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = apiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        if(progressListener != null) {
            apiClient.getHttpClient().networkInterceptors().add(new com.squareup.okhttp.Interceptor() {
                @Override
                public com.squareup.okhttp.Response intercept(com.squareup.okhttp.Interceptor.Chain chain) throws IOException {
                    com.squareup.okhttp.Response originalResponse = chain.proceed(chain.request());
                    return originalResponse.newBuilder()
                    .body(new ProgressResponseBody(originalResponse.body(), progressListener))
                    .build();
                }
            });
        }

        String[] localVarAuthNames = new String[] { "Authorization", "OAuth2 Authorization Code Flow", "OAuth2 Client Credentials Flow" };
        return apiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarFormParams, localVarAuthNames, progressRequestListener);
    }
    
    @SuppressWarnings("rawtypes")
    private com.squareup.okhttp.Call getTemplateFieldDefinitionsByTemplateNameValidateBeforeCall(String repoId, String templateName, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count, final ProgressResponseBody.ProgressListener progressListener, final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {
        // verify the required parameter 'repoId' is set
        if (repoId == null) {
            throw new ApiException("Missing the required parameter 'repoId' when calling getTemplateFieldDefinitionsByTemplateName(Async)");
        }
        // verify the required parameter 'templateName' is set
        if (templateName == null) {
            throw new ApiException("Missing the required parameter 'templateName' when calling getTemplateFieldDefinitionsByTemplateName(Async)");
        }
        
        com.squareup.okhttp.Call call = getTemplateFieldDefinitionsByTemplateNameCall(repoId, templateName, prefer, culture, $select, $orderby, $top, $skip, $count, progressListener, progressRequestListener);
        return call;

        
        
        
        
    }

    /**
     * 
     * - Returns the field definitions assigned to a template definition. - Provide a template definition name, and get a paged listing of the field definitions assigned to that template.  - Default page size: 100. Allowed OData query options: Select | Count | OrderBy | Skip | Top | SkipToken | Prefer.
     * @param repoId The requested repository ID. (required)
     * @param templateName A required query parameter for the requested template name. (required)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @return ODataValueContextOfIListOfTemplateFieldInfo
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ODataValueContextOfIListOfTemplateFieldInfo getTemplateFieldDefinitionsByTemplateName(String repoId, String templateName, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count) throws ApiException {
        ApiResponse<ODataValueContextOfIListOfTemplateFieldInfo> resp = getTemplateFieldDefinitionsByTemplateNameWithHttpInfo(repoId, templateName, prefer, culture, $select, $orderby, $top, $skip, $count);
        return resp.getData();
    }

    /**
     * 
     * - Returns the field definitions assigned to a template definition. - Provide a template definition name, and get a paged listing of the field definitions assigned to that template.  - Default page size: 100. Allowed OData query options: Select | Count | OrderBy | Skip | Top | SkipToken | Prefer.
     * @param repoId The requested repository ID. (required)
     * @param templateName A required query parameter for the requested template name. (required)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @return ApiResponse&lt;ODataValueContextOfIListOfTemplateFieldInfo&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<ODataValueContextOfIListOfTemplateFieldInfo> getTemplateFieldDefinitionsByTemplateNameWithHttpInfo(String repoId, String templateName, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count) throws ApiException {
        com.squareup.okhttp.Call call = getTemplateFieldDefinitionsByTemplateNameValidateBeforeCall(repoId, templateName, prefer, culture, $select, $orderby, $top, $skip, $count, null, null);
        Type localVarReturnType = new TypeToken<ODataValueContextOfIListOfTemplateFieldInfo>(){}.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * - Returns the field definitions assigned to a template definition. - Provide a template definition name, and get a paged listing of the field definitions assigned to that template.  - Default page size: 100. Allowed OData query options: Select | Count | OrderBy | Skip | Top | SkipToken | Prefer.
     * @param repoId The requested repository ID. (required)
     * @param templateName A required query parameter for the requested template name. (required)
     * @param prefer An optional OData header. Can be used to set the maximum page size using odata.maxpagesize. (optional)
     * @param culture An optional query parameter used to indicate the locale that should be used for formatting.             The value should be a standard language tag. (optional)
     * @param $select Limits the properties returned in the result. (optional)
     * @param $orderby Specifies the order in which items are returned. The maximum number of expressions is 5. (optional)
     * @param $top Limits the number of items returned from a collection. (optional)
     * @param $skip Excludes the specified number of items of the queried collection from the result. (optional)
     * @param $count Indicates whether the total count of items within a collection are returned in the result. (optional)
     * @param callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call getTemplateFieldDefinitionsByTemplateNameAsync(String repoId, String templateName, String prefer, String culture, String $select, String $orderby, Integer $top, Integer $skip, Boolean $count, final ApiCallback<ODataValueContextOfIListOfTemplateFieldInfo> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = getTemplateFieldDefinitionsByTemplateNameValidateBeforeCall(repoId, templateName, prefer, culture, $select, $orderby, $top, $skip, $count, progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<ODataValueContextOfIListOfTemplateFieldInfo>(){}.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }
}
